// Generated by http://code.google.com/p/protostuff/ ... DO NOT EDIT!
// Generated from protostuff

package game.module.battle.bean;


import java.io.Externalizable;
import java.io.IOException;
import java.io.ObjectInput;
import java.io.ObjectOutput;

import io.protostuff.GraphIOUtil;
import io.protostuff.Input;
import io.protostuff.Message;
import io.protostuff.Output;
import io.protostuff.Schema;

import io.protostuff.UninitializedMessageException;
public final class DBStageHero implements Externalizable, Message<DBStageHero>
{

    public static Schema<DBStageHero> getSchema()
    {
        return SCHEMA;
    }

    public static DBStageHero getDefaultInstance()
    {
        return DEFAULT_INSTANCE;
    }

    static final DBStageHero DEFAULT_INSTANCE = new DBStageHero();

    
    // non-private fields
    // see http://developer.android.com/guide/practices/design/performance.html#package_inner
    Integer templateId;
    Integer level;
    Integer starCount;
    Integer quality;

    public DBStageHero()
    {

    }

    public DBStageHero(
        Integer templateId,
        Integer level,
        Integer starCount,
        Integer quality
    )
    {
        this.templateId = templateId;
        this.level = level;
        this.starCount = starCount;
        this.quality = quality;
    }

    // getters and setters

    // templateId

    public Integer getTemplateId()
    {
        return templateId;
    }


    public void setTemplateId(Integer templateId)
    {
        this.templateId = templateId;
    }

    // level

    public Integer getLevel()
    {
        return level;
    }


    public void setLevel(Integer level)
    {
        this.level = level;
    }

    // starCount

    public Integer getStarCount()
    {
        return starCount;
    }


    public void setStarCount(Integer starCount)
    {
        this.starCount = starCount;
    }

    // quality

    public Integer getQuality()
    {
        return quality;
    }


    public void setQuality(Integer quality)
    {
        this.quality = quality;
    }

    // java serialization

    public void readExternal(ObjectInput in) throws IOException
    {
        GraphIOUtil.mergeDelimitedFrom(in, this, SCHEMA);
    }

    public void writeExternal(ObjectOutput out) throws IOException
    {
        GraphIOUtil.writeDelimitedTo(out, this, SCHEMA);
    }

    // message method

    public Schema<DBStageHero> cachedSchema()
    {
        return SCHEMA;
    }

    static final Schema<DBStageHero> SCHEMA = new Schema<DBStageHero>()
    {
        // schema methods

        public DBStageHero newMessage()
        {
            return new DBStageHero();
        }

        public Class<DBStageHero> typeClass()
        {
            return DBStageHero.class;
        }

        public String messageName()
        {
            return DBStageHero.class.getSimpleName();
        }

        public String messageFullName()
        {
            return DBStageHero.class.getName();
        }

        public boolean isInitialized(DBStageHero message)
        {
            return 
                message.templateId != null 
                && message.level != null 
                && message.starCount != null 
                && message.quality != null;
        }

        public void mergeFrom(Input input, DBStageHero message) throws IOException
        {
            for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
            {
                switch(number)
                {
                    case 0:
                        return;
                    case 1:
                        message.templateId = input.readInt32();
                        break;
                    case 2:
                        message.level = input.readInt32();
                        break;
                    case 3:
                        message.starCount = input.readInt32();
                        break;
                    case 4:
                        message.quality = input.readInt32();
                        break;
                    default:
                        input.handleUnknownField(number, this);
                }   
            }
        }


        public void writeTo(Output output, DBStageHero message) throws IOException
        {
            if(message.templateId == null)
                throw new UninitializedMessageException(message);
            output.writeInt32(1, message.templateId, false);

            if(message.level == null)
                throw new UninitializedMessageException(message);
            output.writeInt32(2, message.level, false);

            if(message.starCount == null)
                throw new UninitializedMessageException(message);
            output.writeInt32(3, message.starCount, false);

            if(message.quality == null)
                throw new UninitializedMessageException(message);
            output.writeInt32(4, message.quality, false);
        }

        public String getFieldName(int number)
        {
            switch(number)
            {
                case 1: return "templateId";
                case 2: return "level";
                case 3: return "starCount";
                case 4: return "quality";
                default: return null;
            }
        }

        public int getFieldNumber(String name)
        {
            final Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }

        final java.util.HashMap<String,Integer> fieldMap = new java.util.HashMap<String,Integer>();
        {
            fieldMap.put("templateId", 1);
            fieldMap.put("level", 2);
            fieldMap.put("starCount", 3);
            fieldMap.put("quality", 4);
        }
    };
    
}
