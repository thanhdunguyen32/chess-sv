// Generated by http://code.google.com/p/protostuff/ ... DO NOT EDIT!
// Generated from protostuff

package game.module.activity.bean;

import javax.annotation.Generated;
import java.io.Externalizable;
import java.io.IOException;
import java.io.ObjectInput;
import java.io.ObjectOutput;
import java.util.ArrayList;
import java.util.List;

import io.protostuff.GraphIOUtil;
import io.protostuff.Input;
import io.protostuff.Message;
import io.protostuff.Output;
import io.protostuff.Schema;

import io.protostuff.UninitializedMessageException;
@Generated("java_bean")
public final class ActivityConfigOne1 implements Externalizable, Message<ActivityConfigOne1>
{

    public static Schema<ActivityConfigOne1> getSchema()
    {
        return SCHEMA;
    }

    public static ActivityConfigOne1 getDefaultInstance()
    {
        return DEFAULT_INSTANCE;
    }

    static final ActivityConfigOne1 DEFAULT_INSTANCE = new ActivityConfigOne1();

    
    // non-private fields
    // see http://developer.android.com/guide/practices/design/performance.html#package_inner
    Integer level;
    List<Award> award;
       Integer extraLimit;
    List<Award> extraLimitAward;

    public ActivityConfigOne1()
    {

    }

    public ActivityConfigOne1(
        Integer level
    )
    {
        this.level = level;
    }

    // getters and setters

    // level

    public Integer getLevel()
    {
        return level;
    }


    public void setLevel(Integer level)
    {
        this.level = level;
    }

    // award

    public List<Award> getAwardList()
    {
        return award;
    }


    public void setAwardList(List<Award> award)
    {
        this.award = award;
    }

    // extraLimit

    public Integer getExtraLimit()
    {
        return extraLimit;
    }


    public void setExtraLimit(Integer extraLimit)
    {
        this.extraLimit = extraLimit;
    }

    // extraLimitAward

    public List<Award> getExtraLimitAwardList()
    {
        return extraLimitAward;
    }


    public void setExtraLimitAwardList(List<Award> extraLimitAward)
    {
        this.extraLimitAward = extraLimitAward;
    }

    // java serialization

    public void readExternal(ObjectInput in) throws IOException
    {
        GraphIOUtil.mergeDelimitedFrom(in, this, SCHEMA);
    }

    public void writeExternal(ObjectOutput out) throws IOException
    {
        GraphIOUtil.writeDelimitedTo(out, this, SCHEMA);
    }

    // message method

    public Schema<ActivityConfigOne1> cachedSchema()
    {
        return SCHEMA;
    }

    static final Schema<ActivityConfigOne1> SCHEMA = new Schema<ActivityConfigOne1>()
    {
        // schema methods

        public ActivityConfigOne1 newMessage()
        {
            return new ActivityConfigOne1();
        }

        public Class<ActivityConfigOne1> typeClass()
        {
            return ActivityConfigOne1.class;
        }

        public String messageName()
        {
            return ActivityConfigOne1.class.getSimpleName();
        }

        public String messageFullName()
        {
            return ActivityConfigOne1.class.getName();
        }

        public boolean isInitialized(ActivityConfigOne1 message)
        {
            return 
                message.level != null;
        }

        public void mergeFrom(Input input, ActivityConfigOne1 message) throws IOException
        {
            for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
            {
                switch(number)
                {
                    case 0:
                        return;
                    case 1:
                        message.level = input.readInt32();
                        break;
                    case 2:
                        if(message.award == null)
                            message.award = new ArrayList<Award>();
                        message.award.add(input.mergeObject(null, Award.getSchema()));
                        break;

                    case 3:
                        message.extraLimit = input.readInt32();
                        break;
                    case 4:
                        if(message.extraLimitAward == null)
                            message.extraLimitAward = new ArrayList<Award>();
                        message.extraLimitAward.add(input.mergeObject(null, Award.getSchema()));
                        break;

                    default:
                        input.handleUnknownField(number, this);
                }   
            }
        }


        public void writeTo(Output output, ActivityConfigOne1 message) throws IOException
        {
            if(message.level == null)
                throw new UninitializedMessageException(message);
            output.writeInt32(1, message.level, false);

            if(message.award != null)
            {
                for(Award award : message.award)
                {
                    if(award != null)
                        output.writeObject(2, award, Award.getSchema(), true);
                }
            }


            if(message.extraLimit != null)
                output.writeInt32(3, message.extraLimit, false);

            if(message.extraLimitAward != null)
            {
                for(Award extraLimitAward : message.extraLimitAward)
                {
                    if(extraLimitAward != null)
                        output.writeObject(4, extraLimitAward, Award.getSchema(), true);
                }
            }

        }

        public String getFieldName(int number)
        {
            switch(number)
            {
                case 1: return "level";
                case 2: return "award";
                case 3: return "extraLimit";
                case 4: return "extraLimitAward";
                default: return null;
            }
        }

        public int getFieldNumber(String name)
        {
            final Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }

        final java.util.HashMap<String,Integer> fieldMap = new java.util.HashMap<String,Integer>();
        {
            fieldMap.put("level", 1);
            fieldMap.put("award", 2);
            fieldMap.put("extraLimit", 3);
            fieldMap.put("extraLimitAward", 4);
        }
    };
    
}
